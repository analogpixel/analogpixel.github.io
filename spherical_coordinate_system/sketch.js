
// https://en.wikipedia.org/wiki/Spherical_coordinate_system
// https://en.wikipedia.org/wiki/Polar_coordinate_system
//

var r = 0;
var points = [];
var cam;
var data = [[31.0,29.0],[35.0,33.0],[36.0,33.0],[39.0,36.0],[41.0,37.0],[43.0,38.0],[44.0,40.0],[47.0,41.0],[49.0,43.0],[50.0,44.0],[53.0,46.0],[55.0,48.0],[58.0,50.0],[61.0,52.0],[64.0,55.0],[67.0,57.0],[70.0,59.0],[72.0,61.0],[76.0,64.0],[78.0,66.0],[81.0,68.0],[83.0,70.0],[85.0,73.0],[86.0,74.0],[88.0,77.0],[90.0,79.0],[91.0,80.0],[93.0,82.0],[95.0,84.0],[96.0,86.0],[97.0,87.0],[97.0,89.0],[99.0,90.0],[99.0,91.0],[100.0,92.0],[100.0,93.0],[101.0,94.0],[101.0,94.0],[101.0,94.0],[102.0,95.0],[102.0,95.0],[102.0,95.0],[103.0,96.0],[105.0,98.0],[106.0,98.0],[106.0,98.0],[106.0,98.0],[106.0,98.0],[106.0,97.0],[106.0,97.0],[106.0,97.0],[106.0,97.0],[107.0,97.0],[107.0,96.0],[107.0,96.0],[107.0,97.0],[107.0,97.0],[107.0,100.0],[108.0,102.0],[108.0,104.0],[110.0,108.0],[112.0,111.0],[112.0,113.0],[113.0,115.0],[115.0,119.0],[116.0,120.0],[119.0,125.0],[120.0,128.0],[122.0,131.0],[123.0,134.0],[124.0,135.0],[126.0,138.0],[127.0,140.0],[130.0,144.0],[131.0,146.0],[131.0,147.0],[132.0,148.0],[132.0,150.0],[133.0,151.0],[133.0,152.0],[134.0,153.0],[134.0,154.0],[134.0,155.0],[135.0,157.0],[135.0,158.0],[135.0,159.0],[136.0,161.0],[136.0,162.0],[137.0,163.0],[137.0,165.0],[138.0,166.0],[138.0,168.0],[139.0,169.0],[139.0,171.0],[140.0,173.0],[140.0,174.0],[141.0,176.0],[141.0,178.0],[141.0,179.0],[142.0,181.0],[142.0,182.0],[142.0,184.0],[143.0,185.0],[143.0,187.0],[144.0,189.0],[144.0,190.0],[144.0,191.0],[145.0,193.0],[145.0,194.0],[146.0,196.0],[146.0,197.0],[146.0,198.0],[147.0,199.0],[147.0,201.0],[147.0,202.0],[148.0,204.0],[148.0,205.0],[149.0,207.0],[149.0,208.0],[150.0,210.0],[150.0,212.0],[151.0,213.0],[151.0,214.0],[152.0,216.0],[153.0,218.0],[153.0,218.0],[154.0,220.0],[154.0,221.0],[155.0,222.0],[155.0,223.0],[155.0,223.0],[155.0,224.0],[156.0,224.0],[156.0,225.0],[156.0,225.0],[157.0,225.0],[157.0,226.0],[157.0,226.0],[157.0,226.0],[158.0,227.0],[158.0,227.0],[158.0,228.0],[158.0,228.0],[159.0,229.0],[159.0,229.0],[160.0,230.0],[160.0,230.0],[160.0,231.0],[160.0,232.0],[161.0,232.0],[161.0,233.0],[162.0,234.0],[162.0,235.0],[162.0,236.0],[163.0,236.0],[163.0,237.0],[163.0,237.0],[163.0,237.0],[163.0,238.0],[163.0,238.0],[164.0,237.0],[164.0,237.0],[164.0,236.0],[164.0,235.0],[164.0,234.0],[164.0,233.0],[165.0,232.0],[165.0,231.0],[165.0,229.0],[165.0,228.0],[165.0,226.0],[166.0,224.0],[166.0,223.0],[166.0,221.0],[167.0,218.0],[167.0,215.0],[167.0,213.0],[168.0,210.0],[168.0,206.0],[169.0,203.0],[169.0,199.0],[170.0,196.0],[170.0,192.0],[171.0,188.0],[171.0,185.0],[171.0,181.0],[172.0,177.0],[172.0,172.0],[173.0,168.0],[174.0,164.0],[174.0,159.0],[175.0,154.0],[176.0,150.0],[177.0,145.0],[178.0,140.0],[178.0,135.0],[179.0,130.0],[180.0,124.0],[181.0,119.0],[182.0,113.0],[183.0,107.0],[184.0,101.0],[185.0,95.0],[186.0,90.0],[187.0,85.0],[188.0,79.0],[190.0,75.0],[191.0,70.0],[192.0,66.0],[192.0,64.0],[194.0,61.0],[196.0,55.0],[197.0,54.0],[198.0,51.0],[200.0,49.0],[201.0,46.0],[202.0,45.0],[204.0,43.0],[205.0,42.0],[207.0,40.0],[209.0,38.0],[210.0,37.0],[211.0,35.0],[213.0,34.0],[214.0,32.0],[215.0,31.0],[216.0,30.0],[217.0,30.0],[218.0,29.0],[219.0,29.0],[219.0,28.0],[220.0,28.0],[220.0,28.0],[221.0,27.0],[221.0,27.0],[221.0,27.0],[222.0,26.0],[222.0,26.0],[222.0,26.0],[223.0,26.0],[223.0,26.0],[223.0,25.0],[224.0,25.0],[224.0,25.0],[224.0,25.0],[224.0,25.0],[224.0,25.0],[225.0,25.0],[224.0,25.0],[224.0,25.0],[224.0,26.0],[69.0,113.0],[69.0,113.0],[69.0,113.0],[70.0,113.0],[70.0,113.0],[71.0,113.0],[71.0,113.0],[72.0,113.0],[73.0,113.0],[74.0,113.0],[75.0,113.0],[76.0,113.0],[77.0,113.0],[78.0,113.0],[79.0,113.0],[80.0,113.0],[82.0,113.0],[84.0,113.0],[85.0,113.0],[87.0,113.0],[89.0,113.0],[91.0,113.0],[92.0,113.0],[96.0,113.0],[99.0,113.0],[100.0,113.0],[103.0,113.0],[104.0,113.0],[109.0,113.0],[110.0,113.0],[114.0,113.0],[116.0,113.0],[118.0,113.0],[120.0,113.0],[123.0,113.0],[126.0,113.0],[129.0,113.0],[132.0,113.0],[135.0,113.0],[138.0,113.0],[143.0,113.0],[147.0,113.0],[151.0,113.0],[153.0,113.0],[157.0,113.0],[160.0,113.0],[163.0,113.0],[166.0,113.0],[170.0,113.0],[173.0,113.0],[176.0,113.0],[179.0,113.0],[182.0,113.0],[186.0,113.0],[189.0,113.0],[191.0,113.0],[194.0,113.0],[198.0,114.0],[200.0,114.0],[204.0,114.0],[207.0,114.0],[211.0,114.0],[215.0,114.0],[217.0,114.0],[219.0,115.0],[222.0,115.0],[225.0,115.0],[228.0,115.0],[230.0,116.0],[231.0,116.0],[233.0,116.0],[234.0,116.0],[235.0,116.0],[236.0,116.0],[237.0,117.0],[238.0,117.0],[238.0,117.0],[238.0,117.0],[239.0,117.0],[239.0,117.0],[239.0,117.0],[239.0,117.0]];
var grad;
var c=0;

function preload() {
  grad = loadImage('grad.png');
}

function setup() {
  createCanvas(800, 800, WEBGL);
  cam = createCamera(); 
  cam.setPosition(400, 400, 400);
  cam.lookAt(0, 0, 0);
  normalMaterial();
  ambientLight(150,0,0);
  //cam.pan(-0.8);
  background(0);
}

function cart_to_polar(x,y) {
  var r = sqrt( x*x + y*y);
  var theta = atan2(y,x);
  return [r, theta];
}

function polar_to_cart(r,theta) {
  var x = r * cos(theta);
  var y = r * sin(theta);
  return [x,y];
}

function cart_to_sphere(x,y,z) {
  var r = sqrt( x*x + y*y + z*z);
  var incline = arccos( z / r);
  var azmith = arctan(y/x);
  return [r, incline, azmith];
}

function sphere_to_cart(r, incline, azmith) {
  var x = r * sin(incline) * cos(azmith);
  var y = r * sin(incline) * sin(azmith);
  var z = r * cos(incline);
  return [x,y,z];
}

function boxat(x,y,r) {
  [nr,theta] = cart_to_polar(x,y);

  [x,y,z] = sphere_to_cart(nr, theta, r);

  push();
    translate(x,y,z);
    box(20);
  pop();
}

function mouseDragged() {
    bx = mouseX;
    by = mouseY; 
    points.push( [bx,by] );
}


function draw() {
  if (r < 6.2) {
  pointLight(250, 250, 250, 0,0,400);
  //background(255,100);
  rotateY(radians(35-10));
  //rotateX(radians(45+10));
  //rotateZ(radians(45+20))
  //fill(0,80);
  c+=1;
  specularMaterial(grad.get(c,1) );
  noStroke();
  //for (var i=0; i < 100; i++) {
  for (var i=0; i < data.length; i+=20) {
      boxat(data[i][0], data[i][1], r);
  }
  // data.forEach( (f) => {boxat( f[0], f[1], r); } )
  r += .02;
  } 

  //}
  if (c > grad.width) {
    c =0;
  }
}
